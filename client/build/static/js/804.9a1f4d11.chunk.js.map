{"version":3,"file":"static/js/804.9a1f4d11.chunk.js","mappings":"yPAqFA,EA7EwB,WACtB,IAAMA,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAC5B,GAA6BJ,EAAAA,EAAAA,WAAS,GAAM,eAArCK,EAAO,KAACC,EAAU,MAEzBC,EAAAA,EAAAA,YAAU,WACE,OAANX,QAAM,IAANA,GAAAA,EAAQY,MAAMC,GACpB,GAAG,CAAO,OAANb,QAAM,IAANA,OAAM,EAANA,EAAQY,OACZ,IAAMC,EAAe,yCAAG,2FAEH,OAFG,SAEpBH,GAAW,GAAM,SACMI,EAAAA,EAAAA,IAAU,oCAAD,OACMd,EAAOY,OAC3C,KAAD,WAFOG,EAAI,EAAJA,KAGRL,GAAW,GACXJ,EAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMV,UAClBG,EAAgB,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMR,UAAU,kDAE5BS,QAAQC,IAAI,EAAD,IAAQ,0DAEtB,kBAZoB,mCAcrB,OACE,SAACC,EAAA,EAAM,CAACC,MAAK,UAAa,OAARZ,QAAQ,IAARA,OAAQ,EAARA,EAAUa,KAAI,UAAS,UACvC,iBAAKC,UAAU,0BAAyB,WACtC,gBAAIA,UAAU,cAAa,UAAC,cAAoB,OAARd,QAAQ,IAARA,OAAQ,EAARA,EAAUa,SAClD,gBAAIC,UAAU,cAAa,UAAU,OAARhB,QAAQ,IAARA,OAAQ,EAARA,EAAUiB,OAAO,qBAC9C,gBAAKD,UAAU,MAAK,UAClB,gBAAKA,UAAU,oBAAmB,UAChC,gBAAKA,UAAU,mBAAkB,SACtB,OAARhB,QAAQ,IAARA,OAAQ,EAARA,EAAUkB,KAAI,SAACC,GAAC,OACf,iBAAKH,UAAU,WAAU,UACtBZ,GACK,SAAC,IAAQ,CACLgB,MAAM,OACNC,OAAQ,OAEZ,gBACNC,IAAG,wCAAmCH,EAAEI,KACxCP,UAAU,eACVQ,IAAKL,EAAEJ,KACPX,QAAQ,UAER,iBAAKY,UAAU,YAAW,WACxB,iBAAKA,UAAU,kBAAiB,WAC9B,eAAIA,UAAU,aAAY,SAAEZ,GAAU,SAAC,IAAQ,CAACgB,MAAO,OAAU,8BAAGD,EAAEJ,KAAKU,UAAU,EAAG,SACxF,eAAIT,UAAU,wBAAuB,SACpCZ,GAAU,SAAC,IAAQ,CAACgB,MAAO,KAAQD,EAAEO,MAAMC,eAAe,QAAS,CAClEC,MAAO,WACPC,SAAU,cAId,cAAGb,UAAU,aAAY,SACxBZ,GAAU,SAAC,IAAQ,CAAC0B,MAAO,KAAQ,gCAAGX,EAAEY,YAAYN,UAAU,EAAG,IAAI,YAEtE,gBAAKT,UAAU,kBAAiB,SAC/BZ,GAAU,SAAC,IAAQ,CAACgB,MAAO,IAAMC,OAAQ,MAAS,mBACjDL,UAAU,oBACVgB,QAAS,kBAAMnC,EAAS,YAAD,OAAasB,EAAEZ,MAAO,EAAC,SAC/C,wBA7B0BY,EAAEI,IAkC3B,cAQtB,C","sources":["pages/CategoryProduct.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../components/Layout/Layout\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/CategoryProductStyles.css\";\r\nimport axios from \"axios\";\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css';\r\n\r\nconst CategoryProduct = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [products, setProducts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [loading,setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (params?.slug) getPrductsByCat();\r\n  }, [params?.slug]);\r\n  const getPrductsByCat = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.get(\r\n        `/api/v1/product/product-category/${params.slug}`\r\n      );\r\n      setLoading(false);\r\n      setProducts(data?.products);\r\n      setCategory(data?.category);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout title={`${category?.name} Books`}>\r\n      <div className=\"container mt-3 category\">\r\n        <h4 className=\"text-center\">Category - {category?.name}</h4>\r\n        <h6 className=\"text-center\">{products?.length} result found </h6>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9 offset-1\">\r\n            <div className=\"d-flex flex-wrap\">\r\n              {products?.map((p) => (\r\n                <div className=\"card m-2\" key={p._id}>\r\n                  {loading ? (\r\n                        <Skeleton\r\n                            width=\"100%\"\r\n                            height={250}\r\n                        />\r\n                    ) : <img\r\n                  src={`/api/v1/product/product-photo/${p._id}`}\r\n                  className=\"card-img-top\"\r\n                  alt={p.name}\r\n                  loading=\"lazy\"\r\n                /> }\r\n                  <div className=\"card-body\">\r\n                    <div className=\"card-name-price\">\r\n                      <h6 className=\"card-title\">{loading ? <Skeleton width={120} /> : <>{p.name.substring(0, 30)}</>}</h6>\r\n                      <h6 className=\"card-title card-price\">\r\n                      {loading ? <Skeleton width={60}/> : p.price.toLocaleString(\"en-US\", {\r\n                        style: \"currency\",\r\n                        currency: \"USD\",\r\n                      })}\r\n                      </h6>\r\n                    </div>\r\n                    <p className=\"card-text \">\r\n                    {loading ? <Skeleton count={3} /> : <>{p.description.substring(0, 60)}...</>}\r\n                    </p>\r\n                    <div className=\"card-name-price\">\r\n                    {loading ? <Skeleton width={250}  height={35} /> : <button\r\n                      className=\"btn btn-info ms-1\"\r\n                      onClick={() => navigate(`/product/${p.slug}`)}\r\n                    >\r\n                      More Details\r\n                    </button>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CategoryProduct;\r\n"],"names":["params","useParams","navigate","useNavigate","useState","products","setProducts","category","setCategory","loading","setLoading","useEffect","slug","getPrductsByCat","axios","data","console","log","Layout","title","name","className","length","map","p","width","height","src","_id","alt","substring","price","toLocaleString","style","currency","count","description","onClick"],"sourceRoot":""}