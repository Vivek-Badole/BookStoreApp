{"version":3,"file":"static/js/614.ff15668f.chunk.js","mappings":"+OAMe,SAASA,IACtB,OAAoBC,EAAAA,EAAAA,WAAS,GAAM,eAA5BC,EAAE,KAAEC,EAAK,KAChB,GAAwBC,EAAAA,EAAAA,KAAS,eAA1BC,EAAI,KAAS,KAcpB,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,yCAAG,mGACEC,EAAAA,EAAAA,IAAU,2BAA2B,KAAD,EAA7C,OACDC,KAAKP,GACXC,GAAM,GAENA,GAAM,GACP,2CACF,kBAPc,mCAQP,OAAJE,QAAI,IAAJA,GAAAA,EAAMK,OAAOH,GACnB,GAAG,CAAK,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMK,QAEHR,GAAK,SAAC,KAAM,KAAM,SAAC,IAAO,CAACS,KAAK,IACzC,C,kECSA,IA9BgB,SAAH,GAA4B,IAAD,IAArBA,KAAAA,OAAI,MAAG,QAAO,EAC/B,GAA0BV,EAAAA,EAAAA,UAAS,GAAE,eAA9BW,EAAK,KAAEC,EAAQ,KAChBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAX,EAAAA,EAAAA,YAAU,WACR,IAAMY,EAAWC,aAAY,WAC3BN,GAAS,SAACO,GAAS,QAAOA,CAAS,GACrC,GAAG,KAKH,OAJU,IAAVR,GACEE,EAAS,IAAD,OAAKH,GAAQ,CACnBU,MAAOL,EAASM,WAEb,kBAAMC,cAAcL,EAAU,CACvC,GAAG,CAACN,EAAOE,EAAUE,EAAUL,KAE7B,+BACE,iBACEa,UAAU,+DACVC,MAAO,CAAEC,OAAQ,SAAU,WAE3B,gBAAIF,UAAU,cAAa,UAAC,yBAAuBZ,EAAM,eACzD,gBAAKY,UAAU,iBAAiBG,KAAK,SAAQ,UAC3C,iBAAMH,UAAU,kBAAiB,SAAC,qBAK5C,C","sources":["components/Routes/AdminRoute.js","components/Spinner.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useAuth } from \"../../context/auth\";\nimport { Outlet } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Spinner from \"../Spinner\";\n\nexport default function PrivateRoute() {\n  const [ok, setOk] = useState(false);\n  const [auth, setAuth] = useAuth();\n\n  useEffect(() => {\n    const authCheck = async () => {\n      const res = await axios.get(\"/api/v1/auth/admin-auth\");\n      if (res.data.ok) {\n        setOk(true);\n      } else {\n        setOk(false);\n      }\n    };\n    if (auth?.token) authCheck();\n  }, [auth?.token]);\n\n  return ok ? <Outlet /> : <Spinner path=\"\" />;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nconst Spinner = ({ path = \"login\" }) => {\n  const [count, setCount] = useState(3);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount((prevValue) => --prevValue);\n    }, 1000);\n    count === 0 &&\n      navigate(`/${path}`, {\n        state: location.pathname,\n      });\n    return () => clearInterval(interval);\n  }, [count, navigate, location, path]);\n  return (\n    <>\n      <div\n        className=\"d-flex flex-column justify-content-center align-items-center\"\n        style={{ height: \"100vh\" }}\n      >\n        <h1 className=\"Text-center\">redirecting to you in {count} second </h1>\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Spinner;\n"],"names":["PrivateRoute","useState","ok","setOk","useAuth","auth","useEffect","authCheck","axios","data","token","path","count","setCount","navigate","useNavigate","location","useLocation","interval","setInterval","prevValue","state","pathname","clearInterval","className","style","height","role"],"sourceRoot":""}