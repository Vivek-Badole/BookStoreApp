{"version":3,"file":"static/js/114.4e55ea7f.chunk.js","mappings":"4NA0HA,UApHiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACpB,GAA0BF,EAAAA,EAAAA,UAAS,IAAG,eAA/BG,EAAK,KAAEC,EAAQ,KACtB,GAAgCJ,EAAAA,EAAAA,UAAS,IAAG,eAArCK,EAAQ,KAAEC,EAAW,KAC5B,GAA0BN,EAAAA,EAAAA,UAAS,IAAG,eAA/BO,EAAK,KAAEC,EAAQ,KACtB,GAA8BR,EAAAA,EAAAA,UAAS,IAAG,eAAnCS,EAAO,KAAEC,EAAU,KAC1B,GAA4BV,EAAAA,EAAAA,UAAS,IAAG,eAAjCW,EAAM,KAAEC,EAAS,KAClBC,GAAWC,EAAAA,EAAAA,MAGXC,EAAY,yCAAG,WAAOC,GAAC,4EACR,OAAnBA,EAAEC,iBAAiB,kBAECC,EAAAA,EAAAA,KAAW,wBAAyB,CACpDjB,KAAAA,EACAE,MAAAA,EACAE,SAAAA,EACAE,MAAAA,EACAE,QAAAA,EACAE,OAAAA,IACC,KAAD,GAPIQ,EAAG,SAQEA,EAAIC,KAAKC,SAClBC,EAAAA,GAAAA,QAAcH,EAAIC,MAAQD,EAAIC,KAAKG,SACnCV,EAAS,WAETS,EAAAA,GAAAA,MAAYH,EAAIC,KAAKG,SACtB,gDAEDC,QAAQC,IAAI,EAAD,IACXH,EAAAA,GAAAA,MAAY,wBAAwB,yDAEvC,gBArBiB,sCAuBlB,OACE,SAAC,IAAM,CAACI,MAAM,2BAA0B,UACtC,gBAAKC,UAAU,iBAAiBC,MAAO,CAAEC,UAAW,QAAS,UAC3D,kBAAMC,SAAUf,EAAa,WAC3B,eAAIY,UAAU,QAAO,SAAC,mBACtB,gBAAKA,UAAU,OAAM,UACnB,kBACEI,KAAK,OACLC,MAAO/B,EACPgC,SAAU,SAACjB,GAAC,OAAKd,EAAQc,EAAEkB,OAAOF,MAAM,EACxCL,UAAU,eACVQ,GAAG,mBACHC,YAAY,kBACZC,UAAQ,EACRC,WAAS,OAGb,gBAAKX,UAAU,OAAM,UACnB,kBACEI,KAAK,QACLC,MAAO7B,EACP8B,SAAU,SAACjB,GAAC,OAAKZ,EAASY,EAAEkB,OAAOF,MAAM,EACzCL,UAAU,eACVQ,GAAG,oBACHC,YAAY,oBACZC,UAAQ,OAGZ,gBAAKV,UAAU,OAAM,UACnB,kBACEI,KAAK,WACLC,MAAO3B,EACP4B,SAAU,SAACjB,GAAC,OAAKV,EAAYU,EAAEkB,OAAOF,MAAM,EAC5CL,UAAU,eACVQ,GAAG,uBACHC,YAAY,sBACZC,UAAQ,OAGZ,gBAAKV,UAAU,OAAM,UACnB,kBACEI,KAAK,OACLC,MAAOzB,EACP0B,SAAU,SAACjB,GAAC,OAAKR,EAASQ,EAAEkB,OAAOF,MAAM,EACzCL,UAAU,eACVQ,GAAG,oBACHC,YAAY,mBACZC,UAAQ,OAGZ,gBAAKV,UAAU,OAAM,UACnB,kBACEI,KAAK,OACLC,MAAOvB,EACPwB,SAAU,SAACjB,GAAC,OAAKN,EAAWM,EAAEkB,OAAOF,MAAM,EAC3CL,UAAU,eACVQ,GAAG,sBACHC,YAAY,qBACZC,UAAQ,OAGZ,gBAAKV,UAAU,OAAM,UACnB,kBACEI,KAAK,OACLC,MAAOrB,EACPsB,SAAU,SAACjB,GAAC,OAAKJ,EAAUI,EAAEkB,OAAOF,MAAM,EAC1CL,UAAU,eACVQ,GAAG,qBACHC,YAAY,+BACZC,UAAQ,OAGZ,mBAAQN,KAAK,SAASJ,UAAU,uBAAsB,SAAC,cAGvD,eAAGA,UAAU,OAAM,UAAC,6BAAyB,SAAC,KAAI,CAACY,GAAG,SAAQ,SAAC,mBAMzE,C","sources":["pages/Auth/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"./../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { Link,useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport \"../../styles/AuthStyles.css\";\nconst Register = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const navigate = useNavigate();\n\n  // form function\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\"/api/v1/auth/register\", {\n        name,\n        email,\n        password,\n        phone,\n        address,\n        answer,\n      });\n      if (res && res.data.success) {\n        toast.success(res.data && res.data.message);\n        navigate(\"/login\");\n      } else {\n        toast.error(res.data.message);\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    }\n  };\n\n  return (\n    <Layout title=\"Register - BookStore App\">\n      <div className=\"form-container\" style={{ minHeight: \"90vh\" }}>\n        <form onSubmit={handleSubmit}>\n          <h4 className=\"title\">REGISTER FORM</h4>\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              className=\"form-control\"\n              id=\"exampleInputName\"\n              placeholder=\"Enter Your Name\"\n              required\n              autoFocus\n            />\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"form-control\"\n              id=\"exampleInputEmail\"\n              placeholder=\"Enter Your Email \"\n              required\n            />\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"form-control\"\n              id=\"exampleInputPassword\"\n              placeholder=\"Enter Your Password\"\n              required\n            />\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n              className=\"form-control\"\n              id=\"exampleInputPhone\"\n              placeholder=\"Enter Your Phone\"\n              required\n            />\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n              className=\"form-control\"\n              id=\"exampleInputAddress\"\n              placeholder=\"Enter Your Address\"\n              required\n            />\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={answer}\n              onChange={(e) => setAnswer(e.target.value)}\n              className=\"form-control\"\n              id=\"exampleInputAnswer\"\n              placeholder=\"What is Your Favorite sports\"\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary mb-1\">\n            REGISTER\n          </button>\n          <p className=\"mb-0\">Already have an account? <Link to='/login'>Login</Link></p>\n        </form>\n        \n      </div>\n    </Layout>\n  );\n};\n\nexport default Register;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","phone","setPhone","address","setAddress","answer","setAnswer","navigate","useNavigate","handleSubmit","e","preventDefault","axios","res","data","success","toast","message","console","log","title","className","style","minHeight","onSubmit","type","value","onChange","target","id","placeholder","required","autoFocus","to"],"sourceRoot":""}